[{"/Users/rakeljonsdottirgudmann/Desktop/weather-project-react/src/index.js":"1","/Users/rakeljonsdottirgudmann/Desktop/weather-project-react/src/reportWebVitals.js":"2","/Users/rakeljonsdottirgudmann/Desktop/weather-project-react/src/App.js":"3","/Users/rakeljonsdottirgudmann/Desktop/weather-project-react/src/Daily.js":"4","/Users/rakeljonsdottirgudmann/Desktop/weather-project-react/src/Current.js":"5","/Users/rakeljonsdottirgudmann/Desktop/weather-project-react/src/Search.js":"6","/Users/rakeljonsdottirgudmann/Desktop/weather-project-react/src/Hourly.js":"7","/Users/rakeljonsdottirgudmann/Desktop/weather-project-react/src/Footer.js":"8","/Users/rakeljonsdottirgudmann/Desktop/weather-project-react/src/FormatDate.js":"9","/Users/rakeljonsdottirgudmann/Desktop/weather-project-react/src/HourlyForecast.js":"10","/Users/rakeljonsdottirgudmann/Desktop/weather-project-react/src/DailyDate.js":"11","/Users/rakeljonsdottirgudmann/Desktop/weather-project-react/src/TemperatureUnit.js":"12"},{"size":232,"mtime":1609706484058,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1609079768846,"results":"15","hashOfConfig":"14"},{"size":397,"mtime":1609888035746,"results":"16","hashOfConfig":"14"},{"size":1204,"mtime":1609984150024,"results":"17","hashOfConfig":"14"},{"size":92,"mtime":1609981415340,"results":"18","hashOfConfig":"14"},{"size":3655,"mtime":1609983587767,"results":"19","hashOfConfig":"14"},{"size":1479,"mtime":1609979661332,"results":"20","hashOfConfig":"14"},{"size":281,"mtime":1609706535739,"results":"21","hashOfConfig":"14"},{"size":808,"mtime":1609708346879,"results":"22","hashOfConfig":"14"},{"size":1214,"mtime":1609969318951,"results":"23","hashOfConfig":"14"},{"size":1859,"mtime":1609979857492,"results":"24","hashOfConfig":"14"},{"size":6506,"mtime":1609984030932,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"eadxf8",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},"/Users/rakeljonsdottirgudmann/Desktop/weather-project-react/src/index.js",[],["54","55"],"/Users/rakeljonsdottirgudmann/Desktop/weather-project-react/src/reportWebVitals.js",[],["56","57"],"/Users/rakeljonsdottirgudmann/Desktop/weather-project-react/src/App.js",[],"/Users/rakeljonsdottirgudmann/Desktop/weather-project-react/src/Daily.js",["58"],"import React, { useState } from \"react\";\nimport DailyDate from \"./DailyDate\";\nimport axios from \"axios\";\n\n\nexport default function Daily(props) {\n    const [loaded, setLoaded] = useState(false);\n    const [forecast, setForecast] = useState(null);\n  \n    function handleDailyForecast (response) {\n        setForecast({\n            daily: response.data.daily,\n            latitude: response.data.lat,\n          })\n          console.log(response);\n      setLoaded(true);\n    }\n\n    function dailyCall (){\n        let apiKey = \"e91b6bdaf8ad76a25dcc33363848923c\";\n        let units = \"metric\"\n        let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${props.latitude}&lon=${props.longitude}&exclude=minutely,hourly,alerts&appid=${apiKey}&units=${units}`\n        axios.get(apiUrl).then(handleDailyForecast);\n\n    }\n  \n    if (loaded && props.latitude === forecast.latitude){\n      return (\n        <div className=\"weather-forecast\" id=\"daily\">\n\n{forecast.daily.slice(1, ).map(function(forecastItem){\n                return  <DailyDate data={forecastItem unit={props.unit} />;\n            })}\n     \n        </div>\n      );\n    } else {\n      \n         dailyCall();\n      return null;\n    }\n  }","/Users/rakeljonsdottirgudmann/Desktop/weather-project-react/src/Current.js",[],"/Users/rakeljonsdottirgudmann/Desktop/weather-project-react/src/Search.js",[],"/Users/rakeljonsdottirgudmann/Desktop/weather-project-react/src/Hourly.js",[],"/Users/rakeljonsdottirgudmann/Desktop/weather-project-react/src/Footer.js",[],"/Users/rakeljonsdottirgudmann/Desktop/weather-project-react/src/FormatDate.js",[],"/Users/rakeljonsdottirgudmann/Desktop/weather-project-react/src/HourlyForecast.js",[],"/Users/rakeljonsdottirgudmann/Desktop/weather-project-react/src/DailyDate.js",[],"/Users/rakeljonsdottirgudmann/Desktop/weather-project-react/src/TemperatureUnit.js",["59"],"import React from \"react\";\nimport FormatDate from \"./FormatDate\";\nimport \"./styless.css\"\n\nexport default function TemperatureUnit(props) {\n\n    function showFahrenheit(event) {\n        event.preventDefault();\n        setUnit(\"fahrenheit\")\n    }\n\n    function showCelsius(event) {\n        event.preventDefault();\n        setUnit(\"celsius\")\n    }\n\n    if (props.unit === \"celsius\") {\n        return (\n            \n    <div className=\"current-weather\">\n        <div className=\"card\">\n            <div className=\"card-body\">\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  <h1 className=\"card-title\" id=\"current-city\">\n                  {props.data.city}\n                  </h1>\n                  <span id=\"current-date\">  <FormatDate date={props.data.date} />  </span>\n                </div>\n                <div className=\"col-md-6 degrees\">\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      <span className=\"today-degrees\">\n                        <span id=\"warmth-now\">{Math.round(props.data.temperature)}°C</span>\n                      </span>\n                    </div>\n                    <span className=\"today-degrees\">\n                      <div className=\"col-sm-6\">\n                        <span className=\"today-weather\">\n                          <img\n                           src={props.data.icon} alt={props.data.description}\n                            width=\"120\"\n                            height=\"120\"\n                          />\n                        </span>\n                      </div>\n                    </span>\n                  </div>\n                  \n                </div>\n           \n                <div className=\"col-md-6 more-info\">\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <span>Humidity: </span>\n                      <span id=\"current-humidity\">{props.data.humidity}</span>%\n                    </div>\n                    <div className=\"col-md-6\">\n                      <span>Wind: </span>\n                      <span id=\"current-wind\">{Math.round(props.data.wind* 2.237)}</span>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <span>Min Temp: </span>\n                      <span id=\"min-temp\">{Math.round(props.data.minTemp)}°C</span>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <span>Max Temp: </span>\n                      <span id=\"max-temp\">{Math.round(props.data.maxTemp)}°C</span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-md-6\" id=\"description\">\n                  {props.data.description}\n                </div>\n              </div>\n            </div>\n          </div>\n       \n        </div>\n\n    <div className=\"btn-group btn-group-toggle\"\n    data-toggle=\"buttons\"\n    id=\"toggle-button\"\n  >\n    <label className=\"btn btn-secondary active\" id=\"celsius-converter\">\n      <input type=\"radio\" name=\"options\" id=\"option1\" checked onChange={showCelsius}/>\n      °C\n    </label>\n    <label className=\"btn btn-secondary\" id=\"fahrenheit-converter\">\n      <input type=\"radio\" name=\"options\" id=\"option2\" /> °F\n    </label>\n  </div>\n\n             );\n    } \n    else \n    {   \n        let fahrenheitTemperature = (props.data.temperature * 9) / 5 + 32;\n        let fahrenheitMaxTemp = (props.data.maxTemp * 9) / 5 + 32;\n        let fahrenheitMinTemp = (props.data.minTemp * 9) / 5 + 32;\n\n        return ( \n        \n    <div className=\"current-weather\">\n        <div className=\"card\">\n            <div className=\"card-body\">\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  <h1 className=\"card-title\" id=\"current-city\">\n                  {props.data.city}\n                  </h1>\n                  <span id=\"current-date\">  <FormatDate date={props.data.date} />  </span>\n                </div>\n                <div className=\"col-md-6 degrees\">\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      <span className=\"today-degrees\">\n                        <span id=\"warmth-now\">{Math.round(fahrenheitTemperature)}°C</span>\n                      </span>\n                    </div>\n                    <span className=\"today-degrees\">\n                      <div className=\"col-sm-6\">\n                        <span className=\"today-weather\">\n                          <img\n                           src={props.data.icon} alt={props.data.description}\n                            width=\"120\"\n                            height=\"120\"\n                          />\n                        </span>\n                      </div>\n                    </span>\n                  </div>\n                  \n                </div>\n           \n                <div className=\"col-md-6 more-info\">\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <span>Humidity: </span>\n                      <span id=\"current-humidity\">{props.data.humidity}</span>%\n                    </div>\n                    <div className=\"col-md-6\">\n                      <span>Wind: </span>\n                      <span id=\"current-wind\">{props.data.wind}</span>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <span>Min Temp: </span>\n                      <span id=\"min-temp\">{Math.round(fahrenheitMinTemp)}°C</span>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <span>Max Temp: </span>\n                      <span id=\"max-temp\">{Math.round(fahrenheitMaxTemp)}°C</span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-md-6\" id=\"description\">\n                  {props.data.description}\n                </div>\n              </div>\n            </div>\n          </div>\n       \n        </div>\n\n  <div\n    className=\"btn-group btn-group-toggle\"\n    data-toggle=\"buttons\"\n    id=\"toggle-button\"\n  >\n    <label className=\"btn btn-secondary active\" id=\"celsius-converter\">\n      <input type=\"radio\" name=\"options\" id=\"option1\" checked onChange={showCelsius}/>\n      °C\n    </label>\n    <label className=\"btn btn-secondary\" id=\"fahrenheit-converter\">\n      <input type=\"radio\" name=\"options\" id=\"option2\" /> °F\n    </label>\n  </div>\n\n);\n}\n}\n",{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"60","replacedBy":"64"},{"ruleId":"62","replacedBy":"65"},{"ruleId":null,"fatal":true,"severity":2,"message":"66","line":32,"column":55},{"ruleId":null,"fatal":true,"severity":2,"message":"67","line":81,"column":5},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],["68"],["69"],"Parsing error: Unexpected token, expected \"}\"\n\n\u001b[0m \u001b[90m 30 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 31 | \u001b[39m{forecast\u001b[33m.\u001b[39mdaily\u001b[33m.\u001b[39mslice(\u001b[35m1\u001b[39m\u001b[33m,\u001b[39m )\u001b[33m.\u001b[39mmap(\u001b[36mfunction\u001b[39m(forecastItem){\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 32 | \u001b[39m                \u001b[36mreturn\u001b[39m  \u001b[33m<\u001b[39m\u001b[33mDailyDate\u001b[39m data\u001b[33m=\u001b[39m{forecastItem unit\u001b[33m=\u001b[39m{props\u001b[33m.\u001b[39munit}} \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 33 | \u001b[39m            })}\u001b[0m\n\u001b[0m \u001b[90m 34 | \u001b[39m     \u001b[0m\n\u001b[0m \u001b[90m 35 | \u001b[39m        \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mdiv\u001b[39m\u001b[33m>\u001b[39m\u001b[0m","Parsing error: Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\n\n\u001b[0m \u001b[90m 79 | \u001b[39m        \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mdiv\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 80 | \u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 81 | \u001b[39m    \u001b[33m<\u001b[39m\u001b[33mdiv\u001b[39m className\u001b[33m=\u001b[39m\u001b[32m\"btn-group btn-group-toggle\"\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 82 | \u001b[39m    data\u001b[33m-\u001b[39mtoggle\u001b[33m=\u001b[39m\u001b[32m\"buttons\"\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 83 | \u001b[39m    id\u001b[33m=\u001b[39m\u001b[32m\"toggle-button\"\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 84 | \u001b[39m  \u001b[33m>\u001b[39m\u001b[0m","no-global-assign","no-unsafe-negation"]